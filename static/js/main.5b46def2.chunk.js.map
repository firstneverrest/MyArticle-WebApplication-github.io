{"version":3,"sources":["components/Loading.js","components/Error.js","components/Article.js","components/Articles.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Loading","className","Error","parser","require","Article","id","article","xml","removeArticle","searchEndIndex","indexOf","slice","thumbnail","content","json","xml2json","title","link","pubDate","split","categories","undefined","href","src","alt","map","category","index","Articles","articles","Footer","App","useState","loading","setLoading","setArticles","useEffect","fetchArticles","a","fetch","response","newArticles","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b46def2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"Loading\">\r\n            <h1>Loading...</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React from 'react'\r\n\r\nconst Error = () => {\r\n    return (\r\n        <div className=\"Error\">\r\n            <h1>Sorry, We can't seem to find the page you're looking for</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React from 'react'\r\n\r\nconst parser = require('xml2json-light');\r\n\r\nconst Article = ({id, article, removeArticle}) => {\r\n    // parse xml to json and extract html tag for thumbnail and content\r\n    let xml = article['content:encoded'];\r\n\r\n    let searchEndIndex= xml.indexOf(\"</p>\");\r\n    xml = xml.slice(0, searchEndIndex + 4)\r\n\r\n    let json = parser.xml2json(xml);\r\n    let thumbnail, content\r\n    \r\n    thumbnail = json['figure']['img']['src'];\r\n    content = json['p'];\r\n    \r\n    let title = article['title']\r\n\r\n    let link = article['link']\r\n    \r\n    let pubDate = article['pubDate']\r\n    pubDate = pubDate.split(\" \")\r\n    pubDate = `${pubDate[1]} ${pubDate[2]} ${pubDate[3]}`\r\n    \r\n    let categories = article['categories']\r\n\r\n    // handle when article paragraph is unable to get date\r\n    if (content[0] === undefined) {\r\n        content = `Click to read more about ${title}`;\r\n    }\r\n    \r\n    return (\r\n        <div className=\"Article\">\r\n            <a href={link} className=\"Article__container\">\r\n                <img className=\"Article__image\" src={thumbnail} alt=\"thumbnail\"></img>\r\n                <h4 className=\"Article__title\">{title}</h4>\r\n                <p className=\"Article__publicDate\">{pubDate}</p>\r\n                <p className=\"Article__content\">{content} ...</p>\r\n                <div className=\"Article__categories\">\r\n                    {categories.map((category, index) => {\r\n                        return <span key={index} className=\"Article__categories-item\">{categories[index]}</span>\r\n                    })}\r\n                </div>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Article\r\n","import React from 'react'\r\nimport Article from './Article'\r\n\r\nconst Articles = ({articles, removeArticle}) => {\r\n\r\n    return (\r\n        <div className=\"Articles\">\r\n            <div className=\"Articles__header\"><h2 className=\"Articles__header-message\"></h2></div> \r\n            <p className=\"Articles__description\">These all articles are come from my medium article.\r\n                If you enjoy with my articles, please visit  \r\n                <a className=\"Articles__link\" href=\"https://medium.com/neverrest\"> my medium</a></p> \r\n            <div className=\"Articles__container\">\r\n            {articles.map((article, index) => {\r\n                return <Article key={index} \r\n                                article={article}\r\n                                removeArticle={removeArticle} />;\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Articles\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"Footer\">\r\n            <p className=\"Footer__text\">Copyright &copy; by Chitsanupong Tangvasinkul (Neverrest).</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useState, useEffect} from 'react'\nimport Loading from './components/Loading';\nimport Error from './components/Error'\nimport Articles from './components/Articles';\nimport Footer from './components/Footer'\nimport './sass/main.scss'\n\n// medium api - \nconst url = 'https://v1.nocodeapi.com/neverrest/medium/tbUXiyQhVDDssczC';\n\nfunction App() {\n  const [loading, setLoading] = useState(true)\n  const [articles, setArticles] = useState([])\n  \n  // fetch api\n  useEffect(() => {\n    fetchArticles()\n  }, [])\n\n  // fetch articles from Medium using nocodeapi\n  const fetchArticles = async () => {\n    setLoading(true)\n    try {\n      const response = await fetch(url)\n      const articles = await response.json()\n      setLoading(false)\n      setArticles(articles)\n    } catch (error) {\n      setLoading(false)\n      return (\n        <Error />\n      );\n    }\n  }\n\n  const removeArticle = (id) => {\n    const newArticles = articles.filter((article) => article.id != id)\n    setArticles(newArticles)\n  }\n\n  if (loading) {\n    return (\n      <Loading />\n    );\n  }\n\n  return (\n    <main className=\"container\">\n      <Articles articles={articles} removeArticle={removeArticle} />\n      <Footer />\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}